apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
  namespace: dev
spec:
  selector:
    app: wordpress
    tier: frontend
  type: NodePort
  ports:
  - name: wordpress
    protocol: TCP
    port: 8080
    targetPort: 80
    nodePort: 30100
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: dev
  labels:
    app: wordpress
  
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: wordpress:latest
        name: wordpress
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 300m
        securityContext:   # This is what wglambert referring to 
          sysctls:               # Will add a sysctl in variable to your container
          - name: net.ipv4.ip_unprivileged_port_start   # You will modify the this parameter 
            value: "0"    
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          value: examplepass
        - name: WORDPRESS_DB_USER
          value: wordpress
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: pv-wp-local
          mountPath: /var/www/html
      restartPolicy: Always
      volumes:
      - name: pv-wp-local
        persistentVolumeClaim:
          claimName: wp-pv-claim
      affinity:
        podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
             - labelSelector:
                 matchExpressions:
                   - key: "app"
                     operator: In
                     values:
                     - minikube-m03
               topologyKey: "kubernetes.io/hostname"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: wordpress
  namespace: dev
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wordpress
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70